generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model course {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String     @db.VarChar(255)
  description  String?    @db.VarChar(255)
  institute_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  institute    institute? @relation(fields: [institute_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  enquiry      enquiry[]
}

model enquiry {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  question   String   @db.VarChar(255)
  student_id String?  @db.Uuid
  course_id  String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  course     course?  @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model institute {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  course      course[]
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service     service[]
}

model service {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String     @db.VarChar(255)
  description  String?    @db.VarChar(255)
  institute_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  institute    institute? @relation(fields: [institute_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  enquiry     enquiry[]
  institute   institute[]
}
